name: DevOps CD Pipeline  for Docker

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master
  workflow_dispatch:
  
env:
  ECS_CLUSTER: devops-ecs-cluster
  ECS_SERVICE: devops-ecs-service
  ECS_TASK_DEFINITION: ecs-task-def.json
  CONTAINER_NAME: ecommerce-website-application
   
jobs:
  build-docker-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn clean install

      - name: Copy artifact to Docker path location
        run: |
          ls -lRt
          cp -r target/simple-maven-project-1.0-SNAPSHOT.war Project/Docker-Kubernetes/webapp.war
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ vars.DOCKER_IMAGE_NAME }}
          IMAGE_TAG=latest
          ECR_REPO=${{ vars.ECR_REPOSITORY }}
          AWS_REGION=${{ vars.AWS_REGION }}
          ECR_REGISTRY=$(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${AWS_REGION}.amazonaws.com
          docker build -t $IMAGE_NAME:$IMAGE_TAG -f Project/Docker-Kubernetes/Dockerfile .

          # Tag for Docker Hub
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

          # Tag for ECR
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      - name: Push to Docker Hub
        run: |
          IMAGE_NAME=${{ vars.DOCKER_IMAGE_NAME }}
          IMAGE_TAG=latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      - name: Push to Amazon ECR
        run: |
          ECR_REPO=${{ vars.ECR_REPOSITORY }}
          AWS_REGION=${{ vars.AWS_REGION }}
          ECR_REGISTRY=$(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${AWS_REGION}.amazonaws.com
          docker push $ECR_REGISTRY/$ECR_REPO:latest
          
      - name: Fill in Task Definition with Image URI
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: $ECR_REGISTRY/$ECR_REPO:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          wait-for-service-stability: true
